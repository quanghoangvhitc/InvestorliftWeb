@page "/"
@using InvestorliftBlazor.Data
@inject WeatherForecastService ForecastService
@inject DatabaseService DbService

<PageTitle>INVESTORLIFT</PageTitle>

<h1>INVESTORLIFT</h1>

@*<p>This component demonstrates fetching data from a service.</p>*@

@if (Houses == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Title</th>
                <th>Full Address</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var house in Houses)
            {
                <tr>
                    <td>@house.Index</td>
                    <td>@house.Title</td>
                    <td>@house.FullAddress</td>
                    <td>@house.Price</td>
                </tr>
            }
        </tbody>
    </table>
}

<button @onclick="ReloadData">Reload</button>

@code {
    private House house;
    //private WeatherForecast[]? forecasts;
    private List<House> Houses = null;

    private async Task GetData()
    {
        Houses = await house.Get();

        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        house = new House(DbService);
        //forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));


    }

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            //var timer = new Timer(new TimerCallback(_ =>
            //{
            //    uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
            //}), null, 2000, 2000);

            await GetData();
        }
    }

    private async void ReloadData()
    {
        Houses = null;

        await GetData();
    }
}

